// <auto-generated />
using System;
using Apricot.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Apricot.Migrations
{
    [DbContext(typeof(ApricotContext))]
    [Migration("20221223203054_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Apricot.Database.Chat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ChannelID")
                        .HasColumnType("int");

                    b.Property<string>("ChatHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ChannelID");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Apricot.Database.Contact", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("UserID2")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID2");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Apricot.Database.Space", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TextChannelID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VideoStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("VideoStatus")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("TextChannelID");

                    b.ToTable("Spaces");
                });

            modelBuilder.Entity("Apricot.Database.SpaceUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("InRoom")
                        .HasColumnType("bit");

                    b.Property<int>("SpaceID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SpaceID");

                    b.HasIndex("UserID");

                    b.ToTable("SpaceUsers");
                });

            modelBuilder.Entity("Apricot.Database.TextChannel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ChannelType")
                        .HasColumnType("int");

                    b.Property<string>("GUID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TextChannels");
                });

            modelBuilder.Entity("Apricot.Database.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Activity")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InActivity")
                        .HasColumnType("bit");

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tag")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TextChannelUser", b =>
                {
                    b.Property<int>("ChannelsID")
                        .HasColumnType("int");

                    b.Property<int>("UsersID")
                        .HasColumnType("int");

                    b.HasKey("ChannelsID", "UsersID");

                    b.HasIndex("UsersID");

                    b.ToTable("TextChannelUser");
                });

            modelBuilder.Entity("Apricot.Database.Chat", b =>
                {
                    b.HasOne("Apricot.Database.TextChannel", "Channel")
                        .WithMany("Chats")
                        .HasForeignKey("ChannelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Channel");
                });

            modelBuilder.Entity("Apricot.Database.Contact", b =>
                {
                    b.HasOne("Apricot.Database.User", "User2")
                        .WithMany("Contacts")
                        .HasForeignKey("UserID2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User2");
                });

            modelBuilder.Entity("Apricot.Database.Space", b =>
                {
                    b.HasOne("Apricot.Database.TextChannel", "TextChannel")
                        .WithMany()
                        .HasForeignKey("TextChannelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TextChannel");
                });

            modelBuilder.Entity("Apricot.Database.SpaceUser", b =>
                {
                    b.HasOne("Apricot.Database.Space", "Space")
                        .WithMany("SpaceUsers")
                        .HasForeignKey("SpaceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Apricot.Database.User", "User")
                        .WithMany("SpaceUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Space");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TextChannelUser", b =>
                {
                    b.HasOne("Apricot.Database.TextChannel", null)
                        .WithMany()
                        .HasForeignKey("ChannelsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Apricot.Database.User", null)
                        .WithMany()
                        .HasForeignKey("UsersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Apricot.Database.Space", b =>
                {
                    b.Navigation("SpaceUsers");
                });

            modelBuilder.Entity("Apricot.Database.TextChannel", b =>
                {
                    b.Navigation("Chats");
                });

            modelBuilder.Entity("Apricot.Database.User", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("SpaceUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
