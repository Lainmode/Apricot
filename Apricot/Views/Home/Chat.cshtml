@using Apricot.Database;
@{
    Layout = "~/Views/Shared/_LayoutAlt.cshtml";
    User user = ViewBag.User;
    User recipient = ViewBag.Recipient;
    string bg = recipient.Status == Apricot.Database.Status.Offline ? "bg-secondary" : recipient.Status == Apricot.Database.Status.Online ? "bg-success" : recipient.Status == Apricot.Database.Status.Away ? "bg-warning" : "bg-danger";

    var myChats = ViewBag.MyChats;
    var recipientChats = ViewBag.RecipientChats;
    ICollection<Chat> chats = (ICollection<Chat>)ViewBag.AllChats;
    int lastChatId = chats.Count > 0 ? chats.Last().ChadID : 0;
}

<style>
    .circle-verysmall {
        height: 20px !important;
        width: 20px !important;
        -moz-border-radius: 20px;
        -webkit-border-radius: 20px;
        border-radius: 20px;
    }

       .circle {
        height: 60px !important;
        width: 60px !important;
        -moz-border-radius: 60px;
        -webkit-border-radius: 60px;
        border-radius: 60px;
    }
</style>

<div class="p-4 text-light overflow-auto" style="height:88%;">
    <div class="d-flex align-items-center mb-4">
        <h5 class="me-4 mb-0">@recipient.Nickname</h5>
        <div class="circle-verysmall @bg"></div>
    </div>
    <hr class="text-light" />
    <div class="chats">
    @foreach(var chat in chats) 
    {
        <div class="d-flex align-items-center mb-3">
        @if(chat.UserID == user.ID) 
        {
            <div class="circle bg-primary me-4 d-flex">
            </div>
            <h6 class="mb-0 bg-primary p-2 pe-3 ps-2 rounded">@chat.Text</h6>

        }

        else 
        {
            <div class="circle  me-4 d-flex">
                    </div>
                <h6 class="mb-0 bg-dark border-secondary border p-2 pe-3 ps-2 rounded">@chat.Text</h6>
        }
        </div>
    }
    </div>
</div>
<div class="d-flex justify-content-center text-center">
    <div class="m-4 text-light" style="width:90%;">
        <form onsubmit="addChat(); return false;">
            <div class="d-flex">
                <input class="form-control me-2 bg-dark text-light" id="message" placeholder="Type something..." />
                <button class="btn btn-secondary text-light">Send</button>
            </div>
            
        </form>
    </div>

</div>


<script>
    var lastChatId = @lastChatId;
   
    $("#space").click(function () {
        if (interval != null) {
            clearInterval(interval);
        }
    });

    $(".logo").click(function () {
        if (interval != null) {
            clearInterval(interval);
        }
    });

    $("#contact").click(function () {
        if (interval != null) {
            clearInterval(interval);
        }
    });

    function addChat() {
        var msg = $('#message').val();
        if(msg == "") {
            return false;
        }
        $('#message').val("");
        $.post("SendMessage",
            {
                text: msg,
                userId: @user.ID,
                recipientId: @recipient.ID
                }, function () { 
                    //showChat(@recipient.ID) 
                });
            return false;
    }

    function showChat(recipientId) {
                if (interval != null) {
            clearInterval(interval);
        }
        var url = '@Url.Action("Chat", "Home")';
        $("#middle").html("");
        $('#middle').load(url, { userId: @user.ID, recipientUserId: recipientId });
    }

    var interval = null;

    var recipientId = @recipient.ID;

    $(document).ready(function () {
        var rid = recipientId;
        var done = true;
        sleep(2000);
         interval = setInterval(function() {
            if(done) {
                done = false;
                $.ajax({
                    method: "post",
                    url: "CheckNewMessages",
                    data: { lastChatId: lastChatId, userId: @user.ID, recipientId: @recipient.ID },
                    success: function (result) {
                        if (result["newMsg"] == true) {
                            handleNewMessages(result);
                        }
                        done = true;
                    },
                    error: function() {
                        keepRunning(rid, interval);
                        done = true;
                    }
                });
            }

        }, 2000);
    });

    function handleNewMessages(result) {
        $(".chats").append(result.messages);
        lastChatId = result.lastChatId;
    }

    function keepRunning(recipient, interval) {
        if(recipient != recipientId) {
            console.log("true");
            clearInterval(interval);
        }
    }

    function sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }
</script>

